fmod MODEL-ACTIONS is
  inc MODEL-TASKS .

  vars t t' t0 t1 t2 : Time .
  var nzt : NzTime .
  vars id id' id0 : Id .
  vars l0 l1 l2 l3 loc : Loc .
  vars lkb ekb ekb' ekb0 : KB .
  var dir : Dir .
  var b b0 b1 b2 : Bool .
  var evs : EventSet .
  vars e e0 v : FiniteFloat .
	var n : Nat .
  vars senl0 senl1 senl2  : SenLoc .
  vars gl0 gl1 gl2 : GridLoc .

**** implicit that id =/= id' since shouldn't be two class facts for id
**** using same t means locs are refreshed at each time step
 eq okEnv(class(id,Bot)  (atloc(id, l1) @ t) 
                 class(id',Bot) (atloc(id',l1) @ t) ekb) = false .
 eq okEnv(ekb) = true [owise] .


**** incase there is only one bot l3 should be l2, no occupation conflict
**** performs actions for one-time unit -- but SEQUENTIALLY!! see below
  op doUnitEnvAct : Time KB EventSet -> KB .
 ceq doUnitEnvAct(t, ekb, (mv(id,dir,v) @ 0 ; nzt) evs)
   = doUnitEnvAct(t, addK(ekb,(atloc(id,l3) @ s(t)) 
                              energy(id,e0) @ s(t)) , evs)
   if l0 := getLoc(id,ekb)
   /\ l1 := doMv(l0,dir,v) 
   /\ e := getEnergy(id,ekb)
   /\ e0 := max(e - costMv,0.0)
   /\ l2 := windEffect(l1,ekb) 
   /\ l3 := 
      (if occupied(l1,ekb) then l0 else (if occupied(l2,ekb) then l1 else l2 fi) fi)
  .

 ceq doUnitEnvAct(t, ekb, (charge(id) @ 0 ; nzt) evs)
   = doUnitEnvAct(t,
      addK(ekb,energy(id,min(e + chargeUnit,maxCharge)) @ s t), evs)
   if (energy(id,e) @ t0) (atloc(id,l0) @ t1) 
	    (atloc(id0,l1) @ t2) class(id0,Station) ekb0 := ekb
   /\ equiv(l0,l1)
	   .

  eq doUnitEnvAct(t, ekb, evs) = ekb [owise] .

  op wind : Loc Dir Nat -> Info .
  op wind : Dir Nat -> Info .
  op windEffect : Loc KB -> Loc .
  eq windEffect(l0, (clock(t)) (wind(l0,dir,n) @ t0) ekb) =
         (if t rem n == 0 then doMv(l0,dir,gridStepX) else l0 fi) .
  ceq windEffect(l0, (clock(t)) (wind(dir,n) @ t0) ekb) = doMv(l0,dir,gridStepX)
   if t rem n == 0 .
  eq windEffect(l0,ekb) = l0 [owise] .
 
	
***(
--- modified location by wind
 ceq windEffect(l0, (clock(t)) ekb) = doMv(l0,S)
  if t rem 13 == 0 .
 ceq windEffect(l0, (clock(t)) ekb) = doMv(l0,N)
  if t rem 17 == 0 .
)

***(
**** incase there is only one bot l3 should be l2 -- i.e. no occupation conflict
**** an alter
--- performs actions for one-time unit
  op doUnitEnvActs : Time KB EventSet -> KB .
  op doUnitEnvActsX : Time KB KB EventSet -> KB .

  eq doUnitEnvActs(t, ekb, evs) = doUnitEnvActsX(t, ekb, ekb,evs) .

 ceq doUnitEnvActsX(t, ekb1, ekb, (act @ 0 ; nzt) evs) =
	   doUnitEnvActsX(t, addK(ekb0,ekb1), ekb,evs) 
   if ekb0 := doUnitEnvAct(t,ekb,(act @ 0 ; nzt)) .
 eq doUnitEnvActsX(t, ekb1, ekb, none) = ekb1 .
)

endfm

